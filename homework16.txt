class Kassa:
    def __init__(self, initial_amount=0):
        self.amount = initial_amount

    def top_up(self, X):
        if X < 0:
            raise ValueError("Пополнение не может быть отрицательным")
        self.amount += X

    def count_1000(self):
        return self.amount // 1000

    def take_away(self, X):
        if X > self.amount:
            raise ValueError("Недостаточно денег в кассе")
        self.amount -= X


class Turtle:
    def __init__(self, x=0, y=0, s=1):
        self.x = x
        self.y = y
        if s <= 0:
            raise ValueError("s должно быть положительным")
        self.s = s

    def go_up(self):
        self.y += self.s

    def go_down(self):
        self.y -= self.s

    def go_left(self):
        self.x -= self.s

    def go_right(self):
        self.x += self.s

    def evolve(self):
        self.s += 1

    def degrade(self):
        if self.s == 1:
            raise ValueError("Нельзя уменьшить s ниже 1")
        self.s -= 1

    def count_moves(self, x2, y2):
        # Минимальное количество ходов — это сумма количества шагов по x и по y,
        # учитывая, что за один ход черепашка перемещается на s клеток.
        dx = abs(x2 - self.x)
        dy = abs(y2 - self.y)

        # Количество ходов по каждой оси — округление вверх от dx/s и dy/s
        moves_x = (dx + self.s - 1) // self.s
        moves_y = (dy + self.s - 1) // self.s

        return moves_x + moves_y



# Касса
k = Kassa(2500)
print(k.count_1000())  # 2
k.top_up(1500)
print(k.count_1000())  # 4
try:
    k.take_away(5000)
except ValueError as e:
    print(e)  # Недостаточно денег в кассе

# Черепашка
t = Turtle(0, 0, 2)
t.go_up()
print(t.x, t.y)  # 0 2
t.go_right()
print(t.x, t.y)  # 2 2
print(t.count_moves(10, 10))  # 8 (4 шагов по x и 4 по y)
t.evolve()
print(t.s)  # 3
print(t.count_moves(10, 10))  # 6 (4 шагов по x и 2 по y)
try:
    t.degrade()
    t.degrade()
    t.degrade()
except ValueError as e:
    print(e)  # Нельзя уменьшить s ниже 1